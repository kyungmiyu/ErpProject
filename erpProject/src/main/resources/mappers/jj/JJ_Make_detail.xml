<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.erpProject.JJ_Make_detailMapper">

<!-- ============================ JJ's mappers start ============================ -->
	<!-- 생산게시판 글의 총 갯수 파악하는 쿼리 -->
	<select id="jjcntMake" parameterType="JJ_Make_detail" resultType="int">
		SELECT Count(*)
		FROM Make_detail
	</select>

	<!-- 생산게시판 전체 게시글을 불러오는 쿼리 -->
	<select id="jjMakeList" parameterType="JJ_Make_detail" resultType="JJ_Make_detail">
		<![CDATA[
		SELECT *
		FROM (
			SELECT ROWNUM rn, m.*, p.p_name
			FROM (
				SELECT *
				FROM Make_detail
			) m
			JOIN Product p ON m.p_itemcode = p.p_itemcode
			ORDER BY m_num DESC
		)
		WHERE rn >= #{start}
		AND rn <= #{end}
		]]>
	</select>
	
	<!-- 생산요청 페이지 시 값들을 불러오는 쿼리 -->
	<select id="jjRequestMakeList" resultType="JJ_Make_detail">
		SELECT	*
		FROM	Make_detail
	</select>
	
		<!-- 생산요청 페이지 시 값들을 저장하는 쿼리 -->
 	<insert id="jjMakeRequestInsert2" parameterType="JJ_Make_detail">
		INSERT INTO Make_detail (
			m_num,               md_num,           f_id,              md_status, 
			p_itemcode,          md_worker,                              
			m_sdate,     		 md_work_date,        
			md_quantity,         md_pro_quantity,       
			rpnc_gubun,			 md_worker_num,	     
			md_note
		)
		VALUES (
			#{m_num},            #{md_num},         #{f_id},         #{md_status},
			#{p_itemcode},       #{md_worker,       jdbcType=VARCHAR} ,        
			#{m_sdate},          #{md_work_date,    jdbcType=DATE},			 
            #{md_quantity},      #{md_pro_quantity, jdbcType=INTEGER},
			#{rpnc_gubun},       #{md_worker_num,   jdbcType=INTEGER},  
			#{md_note,           jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 생산게시판에서 1개의 글만 여는 쿼리 -->
	<select id="jjmakeDetail" parameterType="int" resultType="JJ_Make_detail">
		SELECT m.m_num,         m.md_num,          m.f_id,     m.md_status,
		       m.p_itemcode,    m.md_worker,       
		       to_char(m.m_sdate, 'YYYY-MM-DD') as m_sdate,  
		       to_char(m.md_work_date, 'YYYY-MM-DD') as md_work_date,
		       m.md_quantity,   m.md_pro_quantity,             m.rpnc_gubun,
		       m.md_worker_num, m.md_note,         m.s_date,   m.cus_no,
			   p.p_name, f.f_name
		FROM Make_detail m
			JOIN Product p ON m.p_itemcode = p.p_itemcode
			JOIN Factory f ON m.f_id = f.f_id
		WHERE m_num = #{m_num}		
	</select>
	
	<!-- 검색어로 조회든 글을 카운트하는 쿼리 -->
	<select id="makeSearchCnt" parameterType="JJ_Make_detail" resultType="int">
		SELECT Count(*)
		FROM Make_detail m
			JOIN Product p ON m.p_itemcode = p.p_itemcode
			JOIN Factory f ON m.f_id = f.f_id
		WHERE (m.m_num LIKE '%' || #{keyword} || '%'
			OR m.md_num LIKE '%' || #{keyword} || '%'
			OR m.md_status LIKE '%' || #{keyword} || '%' 
			OR m.rpnc_gubun LIKE '%' || #{keyword} || '%' 
			OR p.p_name LIKE '%' || #{keyword} || '%' 
			OR m.md_worker LIKE '%' || #{keyword} || '%') 
	</select>
	
	<!-- 검색어로 조회든 글들을 불러오는 쿼리 -->
	<select id="makeSearchList" parameterType="JJ_Make_detail" resultType="JJ_Make_detail">
 		SELECT *
		FROM
		(
			SELECT ROWNUM rn, f.*
			FROM
			(
				SELECT m.*, p.p_name, f.f_name
				FROM Make_detail m
					JOIN Product p ON m.p_itemcode = p.p_itemcode
					JOIN Factory f ON m.f_id = f.f_id
				WHERE m.m_num LIKE '%' || #{keyword} || '%'
					OR m.md_num LIKE '%' || #{keyword} || '%'
					OR m.md_status LIKE '%' || #{keyword} || '%' 
					OR m.rpnc_gubun LIKE '%' || #{keyword} || '%' 
					OR p.p_name LIKE '%' || #{keyword} || '%' 
					OR m.md_worker LIKE '%' || #{keyword} || '%'
				ORDER BY m.m_num DESC
			) f
		)
		WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 조회된 글을 삭제하는 쿼리 -->
	<delete id="jjmakeDelete" parameterType="int">
		DELETE FROM Make_detail
		WHERE m_num = #{m_num}
	</delete>
	


<!-- ============================ JJ's mappers 끝 ============================ -->

</mapper>