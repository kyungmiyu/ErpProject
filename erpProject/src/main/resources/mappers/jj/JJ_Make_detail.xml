<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.erpProject.JJ_Make_detailMapper">

<!-- ============================ JJ's mappers start ============================ -->
	<!-- 생산게시판 글의 총 갯수 파악하는 쿼리 -->
	<select id="jjcntMake" parameterType="JJ_Make_detail" resultType="int">
		SELECT Count(*)
		FROM Make_detail
	</select>

	<!-- 생산게시판 전체 게시글을 불러오는 쿼리 -->
	<select id="jjMakeList" parameterType="JJ_Make_detail" resultType="JJ_Make_detail">
		<![CDATA[
		SELECT *
		FROM (
			SELECT ROWNUM rn, m.*, p.p_name
			FROM (
				SELECT *
				FROM Make_detail
			) m
			JOIN Product p ON m.p_itemcode = p.p_itemcode
			ORDER BY m_num DESC
		)
		WHERE rn >= #{start}
		AND rn <= #{end}
		]]>
	</select>
	
	<!-- 생산요청 페이지 시 값들을 불러오는 쿼리 -->
	<select id="jjRequestMakeList" resultType="JJ_Make_detail">
		SELECT	*
		FROM	Make_detail
	</select>
	
		<!-- 생산요청 페이지 시 값들을 저장하는 쿼리 -->
 	<insert id="jjMakeRequestInsert" parameterType="JJ_Make_detail">
		<selectKey keyProperty="m_num" resultType="int" order="BEFORE">
			SELECT NVL(MAX(m_num), 0) + 1
			FROM Make_detail
		</selectKey>
		
		INSERT INTO Make_detail (
			md_status, md_num, md_date, f_id, p_itemcode, p_name, md_quantity,
			md_worker, md_worker_num, md_work_date, md_pro_quantity,
			md_note
		)
		
		SELECT
			<choose>
				<when test="select_md_status == '0'">생산요청</when>
				<when test="select_md_status == '1'">영업생산요청</when>
				<when test="select_md_status == '2'">생산중</when>
				<when test="select_md_status == '3'">생산완료</when>
				<when test="select_md_status == '5'">수불완료</when>
			</choose>,
			<choose>
				<when test="select_rpnc_gubun == '0'">0</when>
				<when test="select_rpnc_gubun == '1'">1</when>
				<when test="select_rpnc_gubun == '2'">2</when>
			</choose>,
			#{md_num}, #{md_date}, 
			<choose>
				<when test="select_f_id == '10001'">10001</when>
				<when test="select_f_id == '10002'">10002</when>
			</choose>,
			#{p_itemcode}, p.p_name, #{md_quantity},
			#{md_worker}, #{md_worker_num}, #{md_work_date}, #{md_pro_quantity},
			#{md_note}
		FROM Product p
		WHERE p_itemcode = #{p_itemcode}
	</insert>
	
	<!-- 생산게시판에서 1개의 글만 여는 쿼리 -->
	<select id="jjmakeDetail" parameterType="int" resultType="JJ_Make_detail">
		SELECT m.*, p.p_name, f.f_name
		FROM Make_detail m
			JOIN Product p ON m.p_itemcode = p.p_itemcode
			JOIN Factory f ON m.f_id = f.f_id
		WHERE m_num = #{m_num}		
	</select>
	
	<!-- 검색어로 조회든 글을 카운트하는 쿼리 -->
	<select id="makeSearchCnt" parameterType="JJ_Make_detail" resultType="int">
		SELECT Count(*)
		FROM Make_detail m
			JOIN Product p ON m.p_itemcode = p.p_itemcode
			JOIN Factory f ON m.f_id = f.f_id
		WHERE (m.m_num LIKE '%' || #{keyword} || '%' 
			OR m.md_status LIKE '%' || #{keyword} || '%' 
			OR m.rpnc_gubun LIKE '%' || #{keyword} || '%' 
			OR p.p_name LIKE '%' || #{keyword} || '%' 
			OR m.md_worker LIKE '%' || #{keyword} || '%') 
	</select>
	
	<!-- 검색어로 조회든 글들을 불러오는 쿼리 -->
	<select id="makeSearchList" parameterType="JJ_Make_detail" resultType="JJ_Make_detail">
 		SELECT *
		FROM
		(
			SELECT ROWNUM rn, f.*
			FROM
			(
				SELECT m.*, p.p_name, f.f_name
				FROM Make_detail m
					JOIN Product p ON m.p_itemcode = p.p_itemcode
					JOIN Factory f ON m.f_id = f.f_id
				WHERE m.m_num LIKE '%' || #{keyword} || '%' 
					OR m.md_status LIKE '%' || #{keyword} || '%' 
					OR m.rpnc_gubun LIKE '%' || #{keyword} || '%' 
					OR p.p_name LIKE '%' || #{keyword} || '%' 
					OR m.md_worker LIKE '%' || #{keyword} || '%'
				ORDER BY m.m_num DESC
			) f
		)
		WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 조회된 글을 삭제하는 쿼리 -->
	<delete id="jjmakeDelete" parameterType="int">
		DELETE FROM Make_detail
		WHERE m_num = #{m_num}
	</delete>
	


<!-- ============================ JJ's mappers 끝 ============================ -->

</mapper>